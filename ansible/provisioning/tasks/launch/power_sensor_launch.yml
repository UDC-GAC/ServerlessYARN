
- name: Start power sensor inside an apptainer/singularity container
  block:
    - name: Check if power sensor image already exists
      stat:
        path: "{{ power_sensor_path }}/image/{{ image_file }}"
        get_checksum: false
        get_mime: false
        get_attributes: false
      register: stat_output

    - name: Copy power sensor container definition file
      when: not stat_output.stat.exists
      template:
        src: "templates/power_budgeting/monitoring/sensor/{{ power_sensor }}/{{ definition_file }}"
        dest: "{{ power_sensor_path }}/image/{{ definition_file }}"

    - name: Find power sensor configuration files to template
      when: not stat_output.stat.exists
      set_fact:
        found_config_files: "{{ lookup('fileglob', 'templates/power_budgeting/monitoring/sensor/' ~ power_sensor ~ '/config/*', wantlist=True) }}"

    - name: Template power sensor configuration files
      when: not stat_output.stat.exists
      template:
        src: "{{ item }}"
        dest: "{{ power_sensor_path }}/config/{{ item | basename }}"
      loop: "{{ found_config_files }}"

    - name: Build image
      when: not stat_output.stat.exists
      shell: "{{ singularity_command_alias }} build image/{{ image_file }} image/{{ definition_file }}"
      args:
        chdir: "{{ power_sensor_path }}"
        executable: /bin/bash
        creates: "image/{{ image_file }}"

    - name: Check containers status
      shell: "sudo {{ singularity_command_alias }} instance list -j"
      register: apptainer_list_output
      args:
        executable: /bin/bash

    - name: Stop current power sensor apptainer container
      shell: "sudo {{ singularity_command_alias }} instance stop {{ container_name }}"
      when: "container_name in apptainer_list_output.stdout"
      args:
        chdir: "{{ power_sensor_path }}"
        executable: /bin/bash
      tags: never, restart_power_sensor

    - name: Check containers status again
      shell: "sudo {{ singularity_command_alias }} instance list -j"
      register: apptainer_list_output
      args:
        executable: /bin/bash
      tags: never, restart_power_sensor

    # TODO: Check if it is better to pin sensor to core 0 (--cpuset-cpus 0 --cpus 0.5)
    - name: Start power sensor apptainer container
      shell: "sudo {{ singularity_command_alias }} instance start -C --net --network {{ mode }}_{{ inventory_hostname }}{{ extra_connection }} --bind /proc:/proc --bind /sys:/sys --bind {{ sensor_reporting_path }}:/reporting image/{{ image_file }} {{ container_name }}"
      when: "container_name not in apptainer_list_output.stdout"
      args:
        chdir: "{{ power_sensor_path }}"
        executable: /bin/bash
      vars:
        extra_connection: "{{ ',ptp' if mode == 'ipvlan' else '' }}"

  when: "container_engine == 'apptainer'"
  vars:
    - power_sensor: "{{ 'selfwatts_controller' if power_meter == 'selfwatts' else 'hwpc_sensor' }}"
    - power_sensor_path: "{{ installation_path }}/{{ power_sensor }}"
    - definition_file: "{{ power_sensor }}.def"
    - image_file: "{{ power_sensor }}.sif"
    - container_name: "sensor-{{ inventory_hostname }}"

- name: Start power sensor inside a lxc container
  debug:
    msg: 'Power sensor inside a lxc container not yet supported'
  when: "container_engine == 'lxc'"
