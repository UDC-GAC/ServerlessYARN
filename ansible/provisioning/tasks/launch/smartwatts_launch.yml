
- name: Start SmartWatts inside an apptainer/singularity container
  block:
    - name: Check if SmartWatts image already exists
      stat:
        path: "{{ smartwatts_path }}/image/{{ image_file }}"
        get_checksum: false
        get_mime: false
        get_attributes: false
      register: stat_output

    - name: Copy SmartWatts container definition file
      when: not stat_output.stat.exists
      template:
        src: "templates/power_budgeting/monitoring/{{ definition_file }}"
        dest: "{{ smartwatts_path }}/image/{{ definition_file }}"

    - name: Copy SmartWatts configuration files
      when: not stat_output.stat.exists
      template:
        src: "templates/power_budgeting/monitoring/config/{{ item }}"
        dest: "{{ smartwatts_path }}/config/{{ item }}"
      with_items:
        - smartwatts-config.json
        - opentsdb.py

    - name: Build image
      when: not stat_output.stat.exists
      shell: "{{ singularity_command_alias }} build image/{{ image_file }} image/{{ definition_file }}"
      args:
        chdir: "{{ smartwatts_path }}"
        executable: /bin/bash
        creates: "image/{{ image_file }}"

    - name: Check containers status
      shell: "{{ singularity_command_alias }} instance list -j"
      register: apptainer_list_output
      args:
        executable: /bin/bash

    - name: Start SmartWatts apptainer container
      shell: "{{ singularity_command_alias }} instance start -C image/{{ image_file }} {{ container_name }}"
      when: "container_name not in apptainer_list_output.stdout"
      args:
        chdir: "{{ smartwatts_path }}"
        executable: /bin/bash

  when: "container_engine == 'apptainer'"
  vars:
    - definition_file: "smartwatts.def"
    - image_file: "smartwatts.sif"
    - container_name: "smartwatts"

- name: Start SmartWatts inside a lxc container
  debug:
    msg: 'SmartWatts inside a lxc container not yet supported'
  when: "container_engine == 'lxc'"