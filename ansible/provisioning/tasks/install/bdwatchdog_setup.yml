
- name: Copy BDWatchdog
  synchronize:
    src: BDWatchdog/
    dest: "{{ bdwatchdog_path }}"
    recursive: true
  tags: restart_services

- name: Copy BDWatchdog source
  synchronize:
    src: BDWatchdog/
    dest: "{{ bdwatchdog_source_path }}"
    recursive: true
  tags: create_app

# TODO: read BDWatchdog_data path from BDWatchdog/deployment/config or viceversa
- name: Create a BDWatchdog data directory
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ user_info.user_name }}"
    recurse: yes

- name: Install BDWatchdog
  shell: bash install.sh
  when: "virtual_mode"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/"
    executable: /bin/bash
    creates: metrics/opentsdb/build/tsdb

# Workaround: the installation of BDWatchdog may create some ssh files with root as owner
- name: Change ssh files permissions
  when: "virtual_mode"
  file:
    path: "{{ lookup('env', 'HOME') }}/.ssh/{{ item }}"
    owner: "{{ user_info.user_name }}"
  with_items: ['known_hosts','id_rsa','id_rsa.pub']

- name: Install just OpenTSDB
  shell: bash prepare.sh ssh_setup && cd metrics/ && bash install.sh
  when: "not virtual_mode"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/"
    executable: /bin/bash
    creates: metrics/opentsdb/build/tsdb

## Stop tmux sessions created by root
- import_tasks: tasks/utils/get_tmux_sessions.yml

- name: Stop TIMESTAMPING Service
  shell: tmux kill-session -t EVE_TIMES
  when: "'EVE_TIMES' in tmux_sessions"

- name: Stop OPENTSDB
  shell: bash stop.sh
  when: "'OPENTSDB' in tmux_sessions"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/metrics"
    executable: /bin/bash

- name: Change BDWatchdog dir owner
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user_info.user_name }}"
    recurse: yes
  with_items:
    - "{{ bdwatchdog_path }}"
    - "{{ bdwatchdog_source_path }}"

- name: Change BDWatchdog data dir owner
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ user_info.user_name }}"
    recurse: yes

- name: Copy service aliases and port configuration to BDWatchdog dir
  template:
    src: templates/bdw_config/services_config.yml
    dest: "{{ bdwatchdog_path }}/services_config.yml"
  tags: restart_services

- name: Copy BDWatchdog atop scripts to BDWatchdog source dir
  template:
    src: "templates/bdw_config/{{ item }}"
    dest: "{{ bdwatchdog_source_path }}/MetricsFeeder/scripts/{{ item }}"
  with_items:
    - run_atop_stream.sh
    - run_atop_stream_with_java_translation.sh
  tags: create_app
