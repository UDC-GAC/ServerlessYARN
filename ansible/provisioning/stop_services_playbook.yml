# Stop node scaler from nodes
- hosts: nodes
  become: "{{ 'no' if container_engine == 'apptainer' else 'yes' }}"
  gather_facts: no
  ignore_unreachable: yes  # we ignore unreachable hosts because in SLURM environments (or similar) hosts might have been shut down before stopping services

  vars_files:
    - vars/main.yml
    - config/config.yml

  environment:
    BDWATCHDOG_PATH: "{{ bdwatchdog_path }}"
    RESCALING_PATH: "{{ serverless_containers_path }}/scripts/"
    PYTHONPATH: ":{{ serverless_containers_path }}"

  tasks:
  - name: Tmux session check
    shell: tmux ls
    register: tmux_output
    ignore_errors: yes
    tags: never, stop_node_scaler, stop_services

  - name: Stop node scaler
    shell: bash scripts/services/node_scaler/stop.sh
    when: "'stdout' in tmux_output and 'node_scaler' in tmux_output.stdout"
    args:
      chdir: "{{ serverless_containers_path }}"
      executable: /bin/bash
    tags: never, stop_node_scaler, stop_services

# Stop services from server
- hosts: localhost
  become: no
  gather_facts: no

  vars_files:
    - vars/main.yml
    - config/config.yml

  tasks:
  - name: Tmux session check
    shell: tmux ls
    register: tmux_output
    ignore_errors: yes
    tags: never, stop_opentsdb, stop_services

  - name: Stop OPENTSDB
    shell: bash stop.sh
    when: "'OPENTSDB' in tmux_output.stdout"
    args:
      chdir: "{{ bdwatchdog_path }}/deployment/metrics"
      executable: /bin/bash
    tags: never, stop_opentsdb

  - name: Stop Redis DB
    when: "'redis_server' in tmux_output.stdout"
    shell: ./redis-cli shutdown
    args:
      chdir: "{{ installation_path }}/redis/src"
      executable: /bin/bash
    tags: never, stop_services

  - name: Stop other services
    when: "item in tmux_output.stdout"
    shell: "tmux kill-session -t {{ item }}"
    args:
      executable: /bin/bash
    loop:
      - rebooter
      - celery
      - web_interface
      - rebalancer
      - sanity_checker
      - refeeder
      - scaler
      - guardian
      - structure_snapshoter
      - database_snapshoter
      - energy_manager
      - watt_wizard
      - watt_trainer
      - orchestrator
    tags: never, stop_services

    ## Stop all other services